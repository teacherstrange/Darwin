generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid          String  @id @default(uuid())
  email         String  @unique
  password      String
  company       String?
  role          String?
  projects      Project[]
  posts         Post[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Project {
  uuid          String  @id @default(uuid())
  short_url     String  @unique
  name          String
  userId        String
  description   String?
  categories    Category[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User @relation(fields: [userId], references: [uuid])

}

model Category {
  uuid          String  @id @default(uuid())
  slug          String  @unique
  name          String
  projectId          String
  description   String?
  cover         String?
  posts         Post[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  project       Project @relation(fields: [projectId], references: [uuid])
}
enum State {
  PUBLISHED
  DRAFT
  ARCHIVED
}
model Post {
  uuid          String  @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  title         String
  slug          String  @unique
  content       String
  cover         String?
  state         State  @default(DRAFT)
  comments      Comment[]

  // relation field
  authorId      String?
  categoryId    String
  author        User?    @relation(fields: [authorId], references: [uuid])
  category      Category @relation(fields: [categoryId], references: [uuid])
}


model Comment {
  uuid          String  @id @default(uuid())
  name          String
  postId        String
  message       String
  email         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  post          Post @relation(fields: [postId], references: [uuid])
}