input RegisterInput {
  username: String!
  email: String!
  password: String!
  role: String
  company: String
}

input LoginInput {
  email: String!
  password: String!
}
type AuthResponse {
  code: String
  status: String
  data: User
  token: String
  message: String
}

type SimpleResponse {
  code: String
  status: String
  token: String
  message: String
}

input TokenInput{
  token: String!
}

input ForgotPasswordInput{
  email: String!
}

input ResetPasswordInput{
  email: String!
  password: String!
  repeatPassword: String!
  token: String!
}

type Mutation {
  register(input: RegisterInput): AuthResponse!
  login(input: LoginInput): AuthResponse!
  logout(input: TokenInput): SimpleResponse!
  forgotPassword(input: ForgotPasswordInput): SimpleResponse!
  resetPassword(input: ResetPasswordInput): SimpleResponse!
  verifyCode(input: TokenInput): SimpleResponse!
}

type User {
  email: String!
  id: String!
  username: String
  role: String
  company: String
}

type Query {
  allUsers: [User!]!
}